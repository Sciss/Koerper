val trajLenCount = Map(69 -> 1, 365 -> 1, 138 -> 1, 101 -> 3, 347 -> 1, 333 -> 1, 481 -> 1, 115 -> 1, 276 -> 1, 5 -> 1, 120 -> 1, 202 -> 1, 10 -> 4, 384 -> 1, 56 -> 2, 153 -> 1, 174 -> 1, 185 -> 1, 42 -> 3, 24 -> 2, 288 -> 1, 301 -> 1, 320 -> 1, 37 -> 4, 25 -> 1, 257 -> 1, 52 -> 2, 14 -> 3, 110 -> 1, 125 -> 1, 196 -> 1, 20 -> 5, 46 -> 3, 93 -> 2, 284 -> 1, 152 -> 2, 57 -> 2, 29 -> 6, 216 -> 1, 179 -> 1, 591 -> 1, 121 -> 3, 147 -> 1, 687 -> 1, 61 -> 3, 453 -> 1, 132 -> 2, 89 -> 1, 133 -> 1, 116 -> 1, 243 -> 1, 1 -> 1, 265 -> 1, 74 -> 1, 6 -> 2, 60 -> 1, 117 -> 2, 85 -> 1, 201 -> 1, 381 -> 2, 366 -> 1, 102 -> 3, 28 -> 2, 38 -> 4, 192 -> 1, 275 -> 1, 21 -> 1, 33 -> 1, 92 -> 1, 65 -> 3, 97 -> 4, 156 -> 2, 9 -> 3, 53 -> 1, 593 -> 1, 141 -> 1, 499 -> 1, 109 -> 1, 124 -> 2, 77 -> 1, 96 -> 3, 173 -> 1, 13 -> 4, 41 -> 4, 134 -> 1, 73 -> 2, 237 -> 1, 105 -> 1, 244 -> 1, 2 -> 1, 311 -> 1, 166 -> 1, 32 -> 2, 34 -> 2, 45 -> 2, 161 -> 1, 64 -> 1, 180 -> 2, 149 -> 1, 176 -> 2, 402 -> 1, 22 -> 3, 44 -> 3, 286 -> 1, 59 -> 3, 118 -> 1, 27 -> 2, 54 -> 2, 49 -> 1, 236 -> 4, 113 -> 3, 81 -> 3, 76 -> 3, 7 -> 1, 39 -> 3, 98 -> 1, 208 -> 2, 477 -> 1, 494 -> 1, 345 -> 1, 91 -> 1, 66 -> 4, 155 -> 1, 198 -> 1, 130 -> 1, 394 -> 1, 3 -> 1, 80 -> 1, 167 -> 1, 35 -> 6, 255 -> 1, 209 -> 1, 112 -> 2, 194 -> 1, 145 -> 1, 63 -> 1, 295 -> 1, 18 -> 1, 150 -> 1, 414 -> 1, 95 -> 1, 409 -> 1, 67 -> 5, 199 -> 1, 16 -> 4, 127 -> 2, 31 -> 5, 336 -> 1, 154 -> 2, 11 -> 3, 43 -> 5, 450 -> 1, 99 -> 2, 87 -> 1, 104 -> 3, 40 -> 2, 26 -> 2, 186 -> 3, 171 -> 2, 418 -> 1, 23 -> 5, 8 -> 3, 75 -> 2, 58 -> 3, 272 -> 1, 214 -> 1, 36 -> 3, 168 -> 2, 30 -> 3, 51 -> 1, 190 -> 1, 19 -> 4, 422 -> 1, 210 -> 1, 326 -> 1, 242 -> 1, 126 -> 1, 79 -> 1, 400 -> 1, 94 -> 1, 131 -> 1, 47 -> 2, 15 -> 2, 163 -> 1, 200 -> 2, 68 -> 3, 62 -> 1, 178 -> 1, 277 -> 1, 90 -> 2, 111 -> 2, 227 -> 1, 83 -> 2, 100 -> 1)
val numTrajCount = Map(0 -> 1, 5 -> 1, 10 -> 3, 24 -> 1604, 14 -> 2, 20 -> 1, 1 -> 3, 6 -> 1, 21 -> 1, 9 -> 1, 13 -> 2, 2 -> 2, 17 -> 1, 22 -> 20, 12 -> 2, 7 -> 2, 3 -> 2, 18 -> 1, 16 -> 2, 11 -> 2, 23 -> 178, 8 -> 1, 19 -> 1, 4 -> 4, 15 -> 1)
val numIndivIsecCount = Map(0 -> 486444, 1 -> 26)
val numAllIsecCount = Map(0 -> 1815, 1 -> 24, 2 -> 1)
val trajOffIsecCount = Map(170 -> 1, 308 -> 1, 37 -> 1, 25 -> 1, 46 -> 1, 57 -> 2, 60 -> 1, 70 -> 1, 165 -> 1, 33 -> 1, 65 -> 1, 188 -> 1, 388 -> 1, 622 -> 1, 129 -> 1, 73 -> 1, 2 -> 1, 34 -> 1, 17 -> 1, 27 -> 1, 391 -> 1, 12 -> 1, 49 -> 1, 236 -> 1, 86 -> 1, 681 -> 1, 362 -> 1, 7 -> 2, 103 -> 2, 66 -> 3, 155 -> 1, 3 -> 2, 35 -> 1, 63 -> 1, 18 -> 1, 177 -> 1, 16 -> 1, 31 -> 1, 627 -> 1, 87 -> 1, 8 -> 1, 75 -> 1, 272 -> 2, 126 -> 1, 62 -> 1)
val dimIsecCount = Map(0 -> 8, 5 -> 3, 1 -> 2, 6 -> 7, 2 -> 5, 7 -> 8, 3 -> 11, 4 -> 8)  // -- unspecific

val count1 = (0 until numTrajCount.size).map(numTrajCount)
trajLenCount.keys.min // 1
trajLenCount.keys.max // 687
trajLenCount.size // 194

val lenHisto = (0 until 700 by 10).map { i =>
  trajLenCount.collect {
    case (key, value) if key >= i && key < i + 10 => value
  } .sum
}

lenHisto.plot(discrete = true)
lenHisto.zipWithIndex.map(_.swap).plot(title = "traj-len histo (bins: i*10 until (i+1)*10)") // (discrete = true)

trajOffIsecCount.keys.max // 681

val offHisto = (0 until 700 by 10).map { i =>
  trajOffIsecCount.collect {
    case (key, value) if key >= i && key < i + 10 => value
  } .sum
}

offHisto.zipWithIndex.map(_.swap).plot(title = "traj-offset intersection histo (bins: i*10 until (i+1)*10)") // (discrete = true)

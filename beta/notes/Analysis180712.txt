val trajLenCount = Map(138 -> 1, 247 -> 1, 153 -> 2, 174 -> 1, 357 -> 1, 196 -> 1, 121 -> 1, 280 -> 1, 1 -> 29, 74 -> 1, 292 -> 1, 661 -> 1, 38 -> 1, 192 -> 1, 33 -> 1, 97 -> 1, 456 -> 1, 188 -> 1, 256 -> 1, 225 -> 1, 526 -> 1, 96 -> 1, 457 -> 1, 128 -> 1, 148 -> 1, 264 -> 1, 279 -> 1, 180 -> 1, 149 -> 1, 176 -> 1, 191 -> 2, 204 -> 1, 54 -> 1, 181 -> 1, 159 -> 1, 208 -> 1, 103 -> 1, 155 -> 1, 399 -> 1, 226 -> 1, 167 -> 2, 490 -> 1, 162 -> 2, 150 -> 2, 199 -> 1, 127 -> 2, 31 -> 1, 314 -> 1, 231 -> 1, 104 -> 2, 246 -> 1, 36 -> 1, 146 -> 1, 30 -> 1, 183 -> 1, 268 -> 1, 195 -> 1, 596 -> 1, 90 -> 1, 111 -> 1, 122 -> 1, 309 -> 1)
val numTrajCount = Map(0 -> 20, 5 -> 2, 10 -> 15, 24 -> 459, 14 -> 11, 20 -> 8, 1 -> 15, 6 -> 13, 21 -> 13, 9 -> 1, 13 -> 11, 2 -> 51, 17 -> 18, 22 -> 70, 12 -> 5, 7 -> 35, 3 -> 14, 18 -> 16, 16 -> 5, 11 -> 13, 23 -> 96, 8 -> 13, 19 -> 9, 4 -> 8, 15 -> 1)
val numIndivIsecCount = Map(0 -> 181164, 1 -> 5)
val numAllIsecCount = Map(0 -> 918, 1 -> 5)
val trajOffIsecCount = Map(249 -> 1, 110 -> 1, 424 -> 1, 65 -> 1, 98 -> 1, 198 -> 1, 87 -> 1, 319 -> 1, 272 -> 1, 268 -> 1)
val dimIsecCount = Map(0 -> 3, 1 -> 1, 2 -> 3, 3 -> 1, 4 -> 2)
val coordRanges = Vector((-0.97966766,0.99954957), (-0.9985023,0.9952059), (-0.9478688,0.99999017), (-0.9995637,0.9993429), (-0.9977679,0.99985373), (-0.99972063,0.99996704))

val count1 = (0 until numTrajCount.size).map(numTrajCount)
trajLenCount.keys.min // 1
trajLenCount.keys.max // 687
trajLenCount.size // 194

val lenHisto = (0 until 700 by 10).map { i =>
  trajLenCount.collect {
    case (key, value) if key >= i && key < i + 10 => value
  } .sum
}

lenHisto.plot(discrete = true)
lenHisto.zipWithIndex.map(_.swap).plot(title = "traj-len histo (bins: i*10 until (i+1)*10)") // (discrete = true)

trajOffIsecCount.keys.max // 681

val offHisto = (0 until 700 by 10).map { i =>
  trajOffIsecCount.collect {
    case (key, value) if key >= i && key < i + 10 => value
  } .sum
}

offHisto.zipWithIndex.map(_.swap).plot(title = "traj-offset intersection histo (bins: i*10 until (i+1)*10)") // (discrete = true)
